# Generated by Django 3.0.5 on 2020-05-08 19:36

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Certification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('idCard', models.CharField(max_length=18, verbose_name='身份证号')),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('fromPlace', models.SmallIntegerField(help_text='以市为单位', verbose_name='生源地')),
                ('specialist', models.SmallIntegerField(null=True, verbose_name='专科大学')),
                ('undergraduate', models.SmallIntegerField(null=True, verbose_name='本科大学')),
                ('master', models.SmallIntegerField(null=True, verbose_name='硕士大学')),
                ('doctor', models.SmallIntegerField(null=True, verbose_name='博士大学')),
                ('studentCard', models.CharField(max_length=50, null=True, verbose_name='学生证号')),
                ('faceImg', models.FileField(blank=True, null=True, upload_to='img/faces', verbose_name='学生照片')),
                ('idCardImg1', models.FileField(blank=True, null=True, upload_to='img/idCardImg', verbose_name='身份证正面')),
                ('idCardImg2', models.FileField(blank=True, null=True, upload_to='img/idCardImg', verbose_name='身份证反面')),
                ('city', models.SmallIntegerField(verbose_name='当前城市')),
                ('school', models.SmallIntegerField(verbose_name='当前学校')),
                ('email', models.CharField(default='com', max_length=200, verbose_name='学生邮箱')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='评论内容')),
                ('time', models.CharField(default='2020-05-08 19:36:56', max_length=50, verbose_name='评论时间')),
                ('active', models.SmallIntegerField(choices=[(1, '生效'), (0, '失效')], default=1, verbose_name='生效')),
                ('toComment', models.IntegerField(null=True, verbose_name='评论id')),
                ('likes', models.IntegerField(default=0, verbose_name='点赞数')),
            ],
        ),
        migrations.CreateModel(
            name='EmailVerifyRecord',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=20, verbose_name='验证码')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('send_time', models.DateTimeField(default=datetime.datetime(2020, 5, 8, 19, 36, 56, 122555), verbose_name='发送时间')),
            ],
            options={
                'verbose_name': '邮箱验证码',
                'verbose_name_plural': '邮箱验证码',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.SmallIntegerField(primary_key=True, serialize=False, verbose_name='站点id')),
                ('siteName', models.CharField(help_text='站点名，比如某市或某学校', max_length=200, verbose_name='站点名称')),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=50, verbose_name='邮箱')),
                ('password', models.CharField(max_length=200, verbose_name='密码')),
                ('name', models.CharField(max_length=200, null=True, verbose_name='登录名')),
                ('address', models.CharField(max_length=200, null=True, verbose_name='地址')),
                ('birthday', models.CharField(max_length=50, null=True, verbose_name='生日')),
                ('nickname', models.CharField(max_length=200, null=True, verbose_name='昵称')),
                ('age', models.IntegerField(null=True, verbose_name='年龄')),
                ('gender', models.IntegerField(choices=[(1, '男性'), (2, '女性'), (0, '不展示')], default=0, help_text='1表示男性，2表示女性, 0表示不展示性别', verbose_name='性别')),
                ('phone', models.CharField(max_length=200, null=True, verbose_name='电话')),
                ('siteList', models.CharField(default='[{"siteName":"主站","id":1}]', help_text='表示当前用户的可用站点', max_length=200, verbose_name='站点')),
                ('status', models.SmallIntegerField(choices=[(1, '已认证'), (2, '未认证'), (3, '锁定'), (0, '注销')], default=2, verbose_name='用户状态')),
                ('currentSchool', models.CharField(max_length=20, null=True, verbose_name='当前学校名称')),
                ('chatList', models.CharField(max_length=200, null=True, verbose_name='聊天列表')),
                ('currentEducation', models.SmallIntegerField(choices=[(1, '专科'), (2, '本科'), (3, '硕士'), (4, '博士')], default=2, verbose_name='当前学历')),
                ('defaultSite', models.SmallIntegerField(default=1, verbose_name='默认站点')),
                ('starList', models.TextField(null=True, verbose_name='关注列表')),
                ('fansList', models.TextField(null=True, verbose_name='粉丝列表')),
                ('avatar', models.FileField(default='/media/img/avatars/default.jpg', upload_to='img/avatars', verbose_name='用户头像')),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('userName', models.CharField(max_length=200, verbose_name='用户昵称')),
                ('createTime', models.CharField(default='2020-05-08 19:36:56', max_length=50, verbose_name='创建时间')),
                ('createPlace', models.CharField(max_length=50, null=True, verbose_name='创建地点')),
                ('introduction', models.CharField(max_length=50, null=True, verbose_name='简介')),
                ('content', models.TextField(verbose_name='内容')),
                ('tags', models.CharField(max_length=200, null=True, verbose_name='标签')),
                ('likes', models.IntegerField(default=0, verbose_name='点赞数')),
                ('comments', models.IntegerField(default=0, verbose_name='评论数')),
                ('stars', models.IntegerField(default=0, verbose_name='收藏数')),
                ('forwards', models.IntegerField(default=0, verbose_name='转发数')),
                ('imgs', models.TextField(null=True, verbose_name='图片')),
                ('site', models.IntegerField(default=1, verbose_name='发布站点')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Student', verbose_name='学生id')),
            ],
        ),
        migrations.CreateModel(
            name='Interactive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(1, '点赞'), (2, '评论'), (3, '收藏'), (4, '转发')], verbose_name='互动类型')),
                ('activeTime', models.CharField(default='2020-05-08 19:36:56', max_length=50, verbose_name='互动时间')),
                ('postId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Post', verbose_name='动态id')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Student', verbose_name='学生id')),
            ],
        ),
        migrations.CreateModel(
            name='History',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('viewTime', models.DateField(verbose_name='浏览时间')),
                ('postId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Post', verbose_name='动态id')),
                ('userId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Student', verbose_name='学生id')),
            ],
        ),
        migrations.CreateModel(
            name='CommentActive',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.SmallIntegerField(choices=[(1, '点赞'), (2, '回复评论'), (3, '回复用户')], verbose_name='互动类型')),
                ('content', models.CharField(max_length=200, verbose_name='回复内容')),
                ('time', models.CharField(default='2020-05-08 19:36:56', max_length=50, verbose_name='评论时间')),
                ('commentId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toCom', to='myApp.Comment', verbose_name='评论ID')),
                ('toStudent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='toStu', to='myApp.Student', verbose_name='回复用户')),
            ],
        ),
        migrations.AddField(
            model_name='comment',
            name='formUser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromUser', to='myApp.Student', verbose_name='评论用户id'),
        ),
        migrations.AddField(
            model_name='comment',
            name='postId',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myApp.Post', verbose_name='评论动态id'),
        ),
        migrations.AddField(
            model_name='comment',
            name='toUser',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='toUser', to='myApp.Student', verbose_name='回复用户id'),
        ),
        migrations.CreateModel(
            name='Chat',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=2000, null=True, verbose_name='文本内容')),
                ('type', models.SmallIntegerField(choices=[(1, '文本'), (2, '图片'), (3, '文件')], verbose_name='消息类型')),
                ('img', models.FileField(blank=True, null=True, upload_to='img/chat', verbose_name='消息图片')),
                ('file', models.FileField(null=True, upload_to='file/chat', verbose_name='消息文件')),
                ('fromStudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fromStudent', to='myApp.Student', verbose_name='发送学生id')),
                ('toStudent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='toStudent', to='myApp.Student', verbose_name='接收学生id')),
            ],
        ),
    ]
